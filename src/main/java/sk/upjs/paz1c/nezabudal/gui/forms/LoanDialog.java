package sk.upjs.paz1c.nezabudal.gui.forms;

import java.time.LocalDateTime;
import sk.upjs.paz1c.nezabudal.other.ObjectFactory;
import sk.upjs.paz1c.nezabudal.other.GuiObjectFactory;

import sk.upjs.paz1c.nezabudal.entity.Category;
import sk.upjs.paz1c.nezabudal.entity.Item;
import sk.upjs.paz1c.nezabudal.entity.Loan;
import sk.upjs.paz1c.nezabudal.gui.models.CategoryComboBoxModel;
import sk.upjs.paz1c.nezabudal.gui.models.ItemComboBoxModel;
import sk.upjs.paz1c.nezabudal.gui.models.LoanTableModel;
import sk.upjs.paz1c.nezabudal.managers.LoanManager;
import sk.upjs.paz1c.nezabudal.other.Validator;

/**
 *
 * @author Mikey
 */
public class LoanDialog extends javax.swing.JDialog {

    private static final int IS_BORROWED_ROW = 2;

    private final LoanManager loanManager = ObjectFactory.INSTANCE.getLoanManager();

    private boolean editMode;

    private Loan loan;

    /**
     * Creates new form AddItemDialog
     */
    public LoanDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        GuiUtilities.setPositionMiddle(parent, this);
        setTitle("Pridaj pôžičku");

        editMode = false;
        loan = new Loan();
    }

    public LoanDialog(java.awt.Frame parent, boolean modal, Loan loan) {
        super(parent, modal);
        initComponents();
        GuiUtilities.setPositionMiddle(parent, this);
        setTitle("Uprav pôžičku");

        this.loan = loan;
        getItemComboBoxModel().setSelectedItem(loan.getItem());
        getLoanTableModel().refresh(loan);
        addLoanButton1.setText("Uprav pôžičku");
        editMode = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        loanTable = new javax.swing.JTable();
        categoryComboBox = new javax.swing.JComboBox<>();
        addLoanButton1 = new javax.swing.JButton();
        itemLabel = new javax.swing.JLabel();
        itemComboBox = new javax.swing.JComboBox<>();
        warningTextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nová pôžička");
        setModal(true);

        categoryLabel.setText("Kategória");

        loanTable.setBackground(new java.awt.Color(240, 240, 240));
        loanTable.setModel(new LoanTableModel());
        jScrollPane1.setViewportView(loanTable);

        categoryComboBox.setModel(GuiObjectFactory.INSTANCE.getCategoryComboBoxModel());
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        addLoanButton1.setText("Požičaj");
        addLoanButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLoanButton1ActionPerformed(evt);
            }
        });

        itemLabel.setText("Predmet");

        itemComboBox.setModel(new ItemComboBoxModel(getSelectedCategory()));

        warningTextLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        warningTextLabel.setText("Potvrďte vlastnosť stlačením \"enter\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(categoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemComboBox, 0, 207, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addLoanButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(warningTextLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemLabel)
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addLoanButton1)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        getItemComboBoxModel().refresh(getSelectedCategory());
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private ItemComboBoxModel getItemComboBoxModel() {
        return (ItemComboBoxModel) itemComboBox.getModel();
    }

    private void addLoanButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLoanButton1ActionPerformed

        // TODO TESTING
        String[] secondRowValues = ((LoanTableModel) loanTable.getModel()).getSecondColumnValues();

        // potentially will be made into a checkbox
        String isBorrowedString = secondRowValues[IS_BORROWED_ROW - 1];
        Boolean lentToMe;
        Item item = getSelectedItem();
        String description = secondRowValues[0];
        String person = secondRowValues[2];

        lentToMe = Validator.validateLoanBorrowedToMe(isBorrowedString);
        // EW EW EW EW SORRY FOR THIS
        if (lentToMe == null) {
            createWarningDialog(Validator.WRONG_BORROWED_TO_ME_FORMAT);
            return;
        }

        String validationMessage = Validator.validateLoan(item, editMode, person);
        if (validationMessage != null) {
            createWarningDialog(validationMessage);
            return;
        }

        LocalDateTime since;
        Object validation = Validator.validateLoanSince(secondRowValues[3]);

        wat:
        try {
            if (validation == null) {
                since = null;
                break wat;
            }
            validationMessage = (String) validation;
            createWarningDialog(validationMessage);
            return;
        } catch (ClassCastException exception) {
            since = (LocalDateTime) validation;
        }

        LocalDateTime until;
        validation = Validator.validateLoanUntil(secondRowValues[4]);
        wat:
        try {
            if (validation == null) {
                until = null;
                break wat;
            }
            validationMessage = (String) validation;
            createWarningDialog(validationMessage);
            return;
        } catch (ClassCastException exception) {
            until = (LocalDateTime) validation;
        }

        // only after validation
        loan.setItem(item);
        loan.setSpecification(description);
        loan.setLentToMe(lentToMe);
        loan.setPerson(person);
        loan.setStartDate(since);
        loan.setReturnDate(until);

        loanManager.saveOrEdit(loan);

        setVisible(false);
        dispose();
    }//GEN-LAST:event_addLoanButton1ActionPerformed

    private void createWarningDialog(String validation) {
        WarningDialog warningDialog = new WarningDialog(this, true, validation);
        warningDialog.setVisible(true);
    }

    private Item getSelectedItem() {
        // validate
        return (Item) getItemComboBoxModel().getSelectedItem();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLoanButton1;
    private javax.swing.JComboBox<Category> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JComboBox<Item> itemComboBox;
    private javax.swing.JLabel itemLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable loanTable;
    private javax.swing.JLabel warningTextLabel;
    // End of variables declaration//GEN-END:variables

    private Category getSelectedCategory() {
        return (Category) ((CategoryComboBoxModel) categoryComboBox.getModel()).getSelectedItem();
    }

    private LoanTableModel getLoanTableModel() {
        return (LoanTableModel) loanTable.getModel();
    }
}
